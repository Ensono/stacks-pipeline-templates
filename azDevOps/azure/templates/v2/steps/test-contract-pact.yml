############################################################################################################
# desc: Runs the consumer driven contract tests with Pact against a specified provider
# params: Node version, workingDirectory, build_number
# return: Publishes the contracts to the pact broker
# pre-reqs: dependency installation
############################################################################################################

parameters:
  versionSpec: ''
  build_number: ''
  workingDirectory: ''
  pact_bearer_token: $(PACT_BEARER_TOKEN)
  pact_consumer: $(PACT_CONSUMER)
  pact_broker: $(PACT_BROKER)
  pact_provider: $(PACT_PROVIDER)
  env_vars: {}

steps:
  # Run Pact contract tests
  - script: npm run test:pact
    displayName: 'Run pact tests'
    workingDirectory: ${{ parameters.workingDirectory }}
    env:
      PACT_CONSUMER: ${{ parameters.pact_consumer }}
      PACT_PROVIDER: ${{ parameters.pact_provider }}

  # Publish Pact test results
  - task: PublishTestResults@2
    inputs:
      testRunner: JUnit
      testResultsFiles: '**/pact-junit-test-report.xml'
      testRunTitle: 'Pact Tests'
    displayName: 'Publish test results'
    condition: succeededOrFailed()

  # Publish contracts to Pact broker
  - script: npm run test:pact-publish
    displayName: 'Publish pact tests'
    workingDirectory: ${{ parameters.workingDirectory }}
    env:
      BUILD_NUMBER: ${{ parameters.build_number }}
      SOURCE_BRANCH_NAME: $(build.SourceBranchName)
      PACT_BROKER: ${{ parameters.pact_broker }}
      PACT_BEARER_TOKEN: ${{ parameters.pact_bearer_token }}
      PACT_CONSUMER: ${{ parameters.pact_consumer }}
      PACT_PROVIDER: ${{ parameters.pact_provider }}
      ${{ each var in parameters.env_vars }}:
        ${{ var.key }}: ${{ var.value }}
