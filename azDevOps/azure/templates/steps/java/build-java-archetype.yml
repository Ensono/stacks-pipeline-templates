parameters:
  repo_root_dir: ""
  project_root_dir: ""
  pipeline_scripts_directory: ""
  # Maven
  maven_cache_directory: ""
  maven_surefire_reports_dir: ""
  maven_allowed_test_tags: ""
  maven_pom_file: ""
  maven_archetype_properties_file: ""
  maven_settings_file: ""
  maven_repository_server: ""
  # Artifactory
  artifactory_username: ""
  artifactory_password: ""
  # Docker Config
  docker_build_container: ""
  # Vulnerability Scanning
  vulnerability_scan: false
  vulnerability_scan_fail_build_on_detection: true
  project_type: ""
  build_type: ""
  # OSSRH MAVEN CENTRAL
  ossrh_jira_id: ""
  ossrh_jira_password: ""
  # GPG KEYS
  gpg_key_signing_id: ""
  gpg_private_key: ""


steps:
  # Maven: Install Packages
  - task: Bash@3
    inputs:
      filePath: "${{ parameters.pipeline_scripts_directory }}/build-maven-install.bash"
      arguments: >
        -U "${{ parameters.ossrh_jira_id }}"
        -P "${{ parameters.ossrh_jira_password }}"
        -S "${{ parameters.maven_settings_file }}"
        -Z "${{ parameters.maven_cache_directory }}"
      workingDirectory: "${{ parameters.project_root_dir }}"
    target:
      container: ${{ parameters.docker_build_container }}
    displayName: "Maven: Install Packages (${{ parameters.project_type }})"

  # Maven: Update version to the value defined in maven_package_version
  - task: Bash@3
    inputs:
      filePath: "${{ parameters.pipeline_scripts_directory }}/build-maven-update-version.bash"
      arguments: >
        -Z "${{ parameters.maven_cache_directory }}"
        -V "${{ parameters.maven_package_version }}"
      workingDirectory: "${{ parameters.project_root_dir }}"
    target:
      container: ${{ parameters.docker_build_container }}
    displayName: "Maven: Update version (${{ parameters.project_type }})"

  # Maven: Build archetype
  - task: Bash@3
    inputs:
      filePath: "${{ parameters.pipeline_scripts_directory }}/build-maven-archetype.bash"
      arguments: >
        -A "${{ parameters.maven_archetype_properties_file }}"
        -S "${{ parameters.maven_settings_file }}"
        -Z "${{ parameters.maven_cache_directory }}"
      workingDirectory: "${{ parameters.project_root_dir }}"
    target:
      container: ${{ parameters.docker_build_container }}
    displayName: "Maven: Build archetype (${{ parameters.project_type }})"

  - bash: |
      mvn install:install-file --DgroupId=org.sonatype.plugins
      -DartifactId=nexus-staging-maven-plugin -Dversion=1.6.7 -Dpackaging=jar
    workingDirectory: "${{ parameters.project_root_dir }}/${{ parameters.maven_cache_directory }}"
    target:
      container: ${{ parameters.docker_build_container }}
    displayName: "install nexus jar depnedencies  "

  - bash: |
      base64 -d <<< "$gpg_private_key" > gpg_private_key.asc
      gpg --import  gpg_private_key.asc
      gpg --list-secret-keys --with-subkey-fingerprint
    target:
      container: ${{ parameters.docker_build_container }}
    displayName: "retrieve and import gpg key from key vault "
    env:
      gpg_private_key: "${{ parameters.gpg_private_key }}"

  # Maven: Performing a Snapshot  Archetype Deployment
  - task: Bash@3
    inputs:
      filePath: "${{ parameters.pipeline_scripts_directory }}/build-maven-release-maven-central.bash"
      arguments: >
        -U "${{ parameters.ossrh_jira_id }}"
        -P "${{ parameters.ossrh_jira_password }}"
        -G "${{ parameters.gpg_key_signing_id }}"
        -Z "${{ parameters.maven_cache_directory }}"
        -F "${{ parameters.maven_pom_file }}"
        -R "${{ parameters.maven_repository_server }}"
        -S "${{ parameters.maven_settings_file }}"
      workingDirectory: "${{ parameters.project_root_dir }}"
    target:
      container: ${{ parameters.docker_build_container }}
    displayName: "Maven: Deploy Application to Maven central  (${{ parameters.project_type }}) to maven central"
