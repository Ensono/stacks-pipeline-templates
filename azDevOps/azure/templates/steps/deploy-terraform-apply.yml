parameters:
  environment: ''
  terraform_artefact_path: ''
  # Parameters specific to terraform as a map
  tf_job_input_params: ''
  tf_job_output_params: ''

steps:
  - bash: terraform plan -input=false -out=tfplan
    displayName: 'Terraform: plan'
    workingDirectory: ${{ parameters.terraform_artefact_path }}
    env:
      # Authentication (this comes from the AzureDevOps library as secured variables)
      ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
      ARM_CLIENT_ID: $(azure_client_id)
      ARM_CLIENT_SECRET: "$(azure_client_secret)"
      ARM_TENANT_ID: $(azure_tenant_id)
      # Terraform
      TF_VAR_name_environment: ${{ parameters.environment }}
      ${{ each input in parameters.tf_job_input_params }}:
        TF_VAR_${{ input.key }}: ${{ input.value }}

  - bash: terraform apply tfplan
    displayName: 'Terraform: apply'
    workingDirectory: ${{ parameters.terraform_artefact_path }}
    env:
      # Authentication
      ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
      ARM_CLIENT_ID: $(azure_client_id)
      ARM_CLIENT_SECRET: "$(azure_client_secret)"
      ARM_TENANT_ID: $(azure_tenant_id)
      # Terraform
      TF_VAR_name_environment: ${{ parameters.environment }}
      ${{ each input in parameters.tf_job_input_params }}:
        TF_VAR_${{ input.key }}: ${{ input.value }}

  - ${{ each output in parameters.tf_job_output_params }}:
      - bash: |
          terraform output ${{ output }}
          export POSITIONAL=$(terraform output ${{ output }})
          echo Creating output var for ${{ output }} with value $POSITIONAL
          echo "##vso[task.setvariable variable=${{ output }};isOutput=true]$POSITIONAL"
        displayName: 'Terraform: output ${{ output }}'
        workingDirectory: ${{ parameters.terraform_artefact_path }}
        name: 'tfoutput_${{ output }}'
