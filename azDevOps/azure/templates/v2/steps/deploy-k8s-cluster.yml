parameters:
  azure_tenant_id: ''
  azure_subscription_id: ''
  azure_client_id: ''
  azure_client_secret: ''
  aks_cluster_name: ""
  aks_resource_group_name: ""
  aks_dns_resource_group_name: ""
  aks_set_acr_perms: false
  aks_deploy_gatekeeper: false
  helm_container: "host"
  helm_repositories: {}
  aks_aad_pod_identity: true
  aks_aad_pod_identity_yaml: {}
  acr_name: ""
  acr_resource_group_name: ""
  ingress_definition: {}
  scripts_dir: ""
  external_dns: true
  external_dns_yml: ""
  domain_filter: ""

steps:
  - template: ./login-services.yml
    parameters:
      # Azure
      login_azure: true
      azure_tenant_id: "${{ parameters.azure_tenant_id }}"
      azure_subscription_id: "${{ parameters.azure_subscription_id }}"
      azure_client_id: "${{ parameters.azure_client_id }}"
      azure_client_secret: "${{ parameters.azure_client_secret }}"
      # Kubernetes
      login_kubernetes: true
      aks_resource_group_name: "${{ parameters.aks_resource_group_name }}"
      aks_cluster_name: "${{ parameters.aks_cluster_name }}"
      aks_set_acr_perms: ${{ parameters.aks_set_acr_perms }}
      acr_name: ${{ parameters.acr_name }}
      acr_resource_group_name: ${{ parameters.acr_resource_group_name }}

  - ${{ if eq(parameters.aks_aad_pod_identity, true) }}:
      - bash: |
          az feature register --name MSIPreview --namespace Microsoft.ContainerService
          az feature register --name PodSecurityPolicyPreview --namespace Microsoft.ContainerService
          az provider register -n Microsoft.ContainerService
        displayName: "K8s: Register AAD pod identity"
        workingDirectory: ${{ parameters.scripts_dir }}
        env:
          ARM_SUBSCRIPTION_ID: ${{ parameters.azure_subscription_id }}
          ARM_CLIENT_ID: ${{ parameters.azure_client_id }}
          ARM_CLIENT_SECRET: ${{ parameters.azure_client_secret }}
          ARM_TENANT_ID: ${{ parameters.azure_tenant_id }}

  - template: ./deploy-add-helm-repositories.yml
    parameters:
      container: "${{ parameters.helm_container }}"
      helm_repositories: ${{ parameters.helm_repositories }}

  # If you want multiple Ingress Controllers, deploy them after this template file.
  # A previous version of this took in multiple yaml files for Ingress Controllers
  # which is no longer the case.
  - template: ./deploy-helm-app.yml
    parameters:
      container: "${{ parameters.helm_container }}"
      template_input:
        - ${{ parameters.ingress_definition }}

  - ${{ if eq(parameters.external_dns, true) }}:
      - bash: |
          ./external-dns.sh ${{ parameters.aks_resource_group_name }} \
          ${{ parameters.aks_cluster_name }} \
          ${{ parameters.aks_dns_resource_group_name }} \
          ${{ parameters.external_dns_yml }}
        displayName: "K8s: Deploy External DNS service"
        workingDirectory: ${{ parameters.scripts_dir }}
        env:
          ARM_SUBSCRIPTION_ID: ${{ parameters.azure_subscription_id }}
          ARM_CLIENT_ID: ${{ parameters.azure_client_id }}
          ARM_CLIENT_SECRET: ${{ parameters.azure_client_secret }}
          ARM_TENANT_ID: ${{ parameters.azure_tenant_id }}

  - ${{ if eq(parameters.aks_aad_pod_identity, true) }}:
      - bash: |
          kubectl apply -f https://raw.githubusercontent.com/Azure/aad-pod-identity/master/deploy/infra/deployment-rbac.yaml --context ${{ parameters.aks_cluster_name }}
          kubectl apply -f ${{ parameters.aks_aad_pod_identity_yaml.aad_id_yml }} --context ${{ parameters.aks_cluster_name }}
          kubectl apply -f ${{ parameters.aks_aad_pod_identity_yaml.aad_id_binding_yml }} --context ${{ parameters.aks_cluster_name }}
        displayName: "K8s: Deploy AAD pod identity"
        workingDirectory: ${{ parameters.scripts_dir }}
        env:
          ARM_SUBSCRIPTION_ID: ${{ parameters.azure_subscription_id }}
          ARM_CLIENT_ID: ${{ parameters.azure_client_id }}
          ARM_CLIENT_SECRET: ${{ parameters.azure_client_secret }}
          ARM_TENANT_ID: ${{ parameters.azure_tenant_id }}

  - ${{ if eq(parameters.aks_deploy_gatekeeper, true) }}:
      - bash: |
          kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper/master/deploy/gatekeeper.yaml --context ${{ parameters.aks_cluster_name }}
        displayName: "K8s: Deploy Gatekeeper"
        workingDirectory: ${{ parameters.scripts_dir }}
        env:
          ARM_SUBSCRIPTION_ID: ${{ parameters.azure_subscription_id }}
          ARM_CLIENT_ID: ${{ parameters.azure_client_id }}
          ARM_CLIENT_SECRET: ${{ parameters.azure_client_secret }}
          ARM_TENANT_ID: ${{ parameters.azure_tenant_id }}
