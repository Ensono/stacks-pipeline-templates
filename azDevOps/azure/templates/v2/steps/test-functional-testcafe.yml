############################################################################################################
# desc: Runs the functional (e2e) tests on a deployed webapp with Testcafe
# params: Env vars, Node version, workingDirectory, build_number
# return: Publishes test results, screenshots and video recordings
# pre-reqs: dependency installation, build webapp
############################################################################################################

parameters:
  env_vars: {}
  workingDirectory: ''

steps:
  # Install test runtime dependencies (not installing modules listed in devDependencies)
  - script: npm install --production
    displayName: 'Install test dependencies'
    workingDirectory: ${{ parameters.workingDirectory }}

  # Run the tests in a Testcafe Docker container that has installed browsers
  - bash: |
      docker run -e APP_BASE_URL=$APP_BASE_URL -e APP_BASE_PATH=$APP_BASE_PATH -e MENU_API_URL=$MENU_API_URL -e NODE_ENV=$NODE_ENV -it -v $(pwd):/tests testcafe/testcafe all /tests/**/*.test.cf.ts
    displayName: 'Test: Run Testcafe tests against all browsers in container'
    workingDirectory: ${{ parameters.workingDirectory }}
    env:
      ${{ each var in parameters.env_vars }}:
        ${{ var.key }}: ${{ var.value }}

  # Publish Artifacts: Cypress will automatically capture screenshots when a failure happens
  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'screenshots'
      targetPath: '${{ parameters.workingDirectory }}/screenshots'
    displayName: 'Publish Screenshots (TestCafe)'
    condition: failed()

  # Publish CI test results
  - task: PublishTestResults@2
    inputs:
      testRunner: xUnit
      testResultsFiles: '**/*-xunit-test-report.xml'
      testRunTitle: 'TestCafe Tests'
    displayName: 'Publish test results'
    condition: succeededOrFailed()
