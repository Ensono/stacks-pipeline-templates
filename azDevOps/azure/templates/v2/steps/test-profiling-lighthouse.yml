############################################################################################################
# desc: 
# return:
# pre-reqs:
############################################################################################################

parameters:
  working_directory: ''
  lighthouse_test_target: '' #This is used in the token replacement step
  lighthouse_config_file_name: ''
  lighthouse_container: ''
  lighthouse_scripts: {}
  env_vars: {}

steps:
  - target:
      container: ${{ parameters.lighthouse_container }}

  # Install test runtime dependencies (not installing modules listed in devDependencies)
  - script: npm install
    displayName: 'Install test dependencies'
    workingDirectory: ${{ parameters.working_directory }}

  # Replace the tokens in the config file (relies on envsubst being in container)
  - bash: |
      envsubst -i ${{ parameters.lighthouse_config_file_name }} -o  ${{ parameters.lighthouse_config_file_name }} -no-empty -no-unset
    workingDirectory: ${{ parameters.working_directory }}
    displayName: 'Lighthouse - Replace environment variables in config'

  # # Run Lighthouse collect
  # - task: Npm@1
  #   displayName: 'Lighthouse - Collect'
  #   inputs:
  #     command: 'custom'
  #     customCommand: 'run lh:collect'
  #     workingDir: ${{ parameters.working_directory }}
  #     verbose: true
  
  # Run Lighthouse scripts
  - task: Npm@1
    displayName: 'Lighthouse - Assert'
    inputs:
      command: 'custom'
      workingDir: '$(Build.SourcesDirectory)${{parameters.working_directory}}'
      verbose: true
      ${{ each script in parameters.lighthouse_scripts }}:
        customCommand: ${{ script.value }}
  
  # Publish the results to the pipeline      
  - task: PublishPipelineArtifact@1
    displayName: 'Publish Lighthouse reports'
    inputs:
      targetPath: '$(Build.SourcesDirectory)${{parameters.working_directory}}/.lighthouseci'
      artifact: 'Lighthouse CI - Results $(Build.BuildNumber)'